Index: UI/src/UI/application/MachineConfTab/MachineConfigurationController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package UI.application.MachineConfTab;\r\n\r\n\r\nimport UI.applicationGUI.AllMachineController;\r\nimport UI.applicationGUI.generalComponents.codeFormat.SimpleCode.SimpleCodeController;\r\nimport UI.application.MachineConfTab.NewCodeFormat.NewCodeFormatController;\r\nimport dtoObjects.CodeFormatDTO;\r\nimport dtoObjects.MachineDataDTO;\r\nimport dtoObjects.PlugboardPairDTO;\r\nimport enigmaEngine.Engine;\r\nimport enigmaEngine.EnigmaEngine;\r\nimport javafx.beans.property.SimpleBooleanProperty;\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.layout.*;\r\n\r\nimport java.util.*;\r\n\r\npublic class MachineConfigurationController {\r\n\r\n   @FXML public AnchorPane MachineDetails;\r\n    @FXML  public Label NumberOfRotors;\r\n    @FXML  public Label numberOfReflectors;\r\n    @FXML  public Label CipheredInputs;\r\n    @FXML public Pane MachineCodePane;\r\n\r\n    @FXML public ComboBox SelectedReflectorComboBox;\r\n    @FXML  public CheckBox WithPlugBoardPairs;\r\n    @FXML public Button SetCodeConfButton;\r\n    @FXML public HBox SelectedMachineCode;\r\n    @FXML public SimpleCodeController SelectedMachineCodeController;\r\n\r\n    @FXML public NewCodeFormatController CurrentCodeComponentController;\r\n    @FXML   public SimpleCodeController CurrentMachineCodeController;\r\n    @FXML public HBox CurrentMachineCode;\r\n\r\n    @FXML public AnchorPane CurrentCodeConfigurationPane;\r\n    @FXML public HBox rotorsAndPositionsHBox;\r\n    // Tab: plugBoard pairs\r\n    @FXML public HBox PairsHBox;\r\n    @FXML  public VBox firstInputVBox;\r\n    @FXML  public VBox secondInputVBox;\r\n    @FXML public Button AddMorePairsButton;\r\n    @FXML  public Label configFirstLabel;\r\n    @FXML  public NewCodeFormatController SelectedCodeComponentController;\r\n    @FXML public TabPane CodeConfTabPane;\r\n    @FXML public Label currentConfigurationLabel;\r\n    @FXML public ScrollPane selectedCodeScrollPane;\r\n    @FXML   public ScrollPane selectedCodeConfiguration;\r\n    @FXML public Button removePlugBoardPairButton;\r\n    @FXML  public ScrollPane currentCodeScrollPane;\r\n    @FXML  public ScrollPane selectedCodeConfigScrollPane;\r\n    @FXML  public Label selectedMachineCodeLabel;\r\n    @FXML  public Label currentMachineLabel;\r\n\r\n\r\n    private Engine mEngine;\r\n    private MachineDataDTO machineData;\r\n    private AllMachineController mainAppController;\r\n    private int numberOfPairs;\r\n\r\n    private SimpleBooleanProperty isCodeSelectedByUser;\r\n    private SimpleBooleanProperty isSelected;\r\n    private SimpleBooleanProperty showCodeDetails;\r\n\r\n\r\n    @FXML\r\n    public void initialize() {\r\n\r\n        if (CurrentCodeComponentController != null && SelectedCodeComponentController!=null\r\n        && CurrentMachineCodeController!=null && SelectedMachineCodeController!=null) {\r\n            CurrentCodeComponentController.SetMachineConfController(this);\r\n            SelectedCodeComponentController.SetMachineConfController(this);\r\n            SelectedMachineCodeController.SetMachineConfController(this);\r\n            CurrentMachineCodeController.SetMachineConfController(this);\r\n        }\r\n\r\n        SetCodeConfButton.disableProperty().bind(isCodeSelectedByUser.not());\r\n        selectedCodeConfigScrollPane.visibleProperty().bind(showCodeDetails);\r\n        currentCodeScrollPane.visibleProperty().bind(showCodeDetails);\r\n        selectedMachineCodeLabel.visibleProperty().bind(showCodeDetails);\r\n        currentMachineLabel.visibleProperty().bind(showCodeDetails);\r\n\r\n\r\n    }\r\n    public MachineConfigurationController()\r\n    {\r\n        numberOfPairs=0;\r\n        isCodeSelectedByUser=new SimpleBooleanProperty();\r\n        isSelected=new SimpleBooleanProperty(false);\r\n        showCodeDetails=new SimpleBooleanProperty(false);\r\n    }\r\n\r\n    public Engine getmEngine() {\r\n        return mEngine;\r\n    }\r\n\r\n    public void setMainAppController(AllMachineController MainController) {\r\n        mainAppController = MainController;\r\n        mEngine = new EnigmaEngine();\r\n    }\r\n\r\n    public void setMachineDetails() {\r\n\r\n        showCodeDetails.set(false);\r\n        CurrentMachineCodeController.clearCurrentCodeView();\r\n        SelectedMachineCodeController.setCurrCodeController(SelectedCodeComponentController);\r\n        mEngine = mainAppController.getmEngine();\r\n        machineData = mEngine.getMachineData();\r\n        if (machineData != null) {\r\n            NumberOfRotors.setText(machineData.getNumberOfRotorsInUse() + \"/\" + machineData.getNumberOfRotorInSystem());\r\n            numberOfReflectors.setText(String.valueOf(machineData.getNumberOfReflectors()));\r\n            CipheredInputs.setText(String.valueOf(mEngine.getCipheredInputsAmount()));\r\n            MachineDetails.setVisible(true);\r\n        }\r\n        if (mEngine.isCodeConfigurationIsSet()) {\r\n            CodeFormatDTO selectedCode = mEngine.getCodeFormat(true);\r\n            SelectedMachineCodeController.setSelectedCode(selectedCode);\r\n            CodeFormatDTO currentCode = mEngine.getCodeFormat(false);\r\n            CurrentMachineCodeController.setSelectedCode(currentCode);\r\n            setVisibleCodeFields(true);\r\n        } else {\r\n            setVisibleCodeFields(false);\r\n        }\r\n    }\r\n\r\n    private void setVisibleCodeFields(boolean toVisible) {\r\n        SelectedMachineCode.setVisible(toVisible);\r\n       // currentCodeScrollPane.setVisible(true);\r\n        //selectedCodeConfigScrollPane.setVisible(true);\r\n\r\n    }\r\n\r\n    public void setInitializeConfiguration() {\r\n\r\n        numberOfPairs=0;\r\n        isCodeSelectedByUser.set(false);\r\n        currentConfigurationLabel.setVisible(false);\r\n        configFirstLabel.setVisible(true);\r\n        MachineCodePane.setVisible(true);\r\n        selectedCodeConfiguration.setVisible(true);\r\n        selectedCodeScrollPane.setVisible(false);\r\n        currentConfigurationLabel.setVisible(false);\r\n        int numberOfRotorsInUse = machineData.getNumberOfRotorsInUse();\r\n        int[] rotorsId = machineData.getRotorsId();\r\n        String positions = machineData.getAlphabetString();\r\n        for (int i = 0; i < numberOfRotorsInUse; i++) {\r\n            createChoiceBox(rotorsId, positions);\r\n        }\r\n        List<String> reflectorIDName = machineData.getReflectorIdList();\r\n        ObservableList<String> reflectorID = FXCollections.observableArrayList();\r\n        for (String ref : reflectorIDName) {\r\n            reflectorID.add(ref);\r\n        }\r\n        SelectedReflectorComboBox.setItems(reflectorID);\r\n    }\r\n\r\n\r\n    private void createChoiceBox(int[] rotorsID, String positions) {\r\n        VBox Vbox = new VBox();\r\n        Vbox.getChildren().add(SetRotorChoiceBox(rotorsID));\r\n        Vbox.getChildren().add(SetPositionsChoiceBox(positions));\r\n        Vbox.setSpacing(30);\r\n        rotorsAndPositionsHBox.getChildren().add(Vbox);\r\n        rotorsAndPositionsHBox.setSpacing(40);\r\n    }\r\n\r\n    private ChoiceBox<Integer> SetRotorChoiceBox(int[] rotorsID) {\r\n        ObservableList<Integer> rotorsIDList = FXCollections.observableArrayList();\r\n        ;\r\n        ChoiceBox<Integer> rotorsChoiceBox = new ChoiceBox<>();\r\n        for (int i = 0; i < rotorsID.length; i++) {\r\n            rotorsIDList.add(rotorsID[i]);\r\n        }\r\n        rotorsChoiceBox.getItems().addAll(rotorsIDList);\r\n        return rotorsChoiceBox;\r\n    }\r\n\r\n    private ChoiceBox<Character> SetPositionsChoiceBox(String positions) {\r\n        ChoiceBox<Character> positionsChoiceBox = new ChoiceBox<>();\r\n        ObservableList<Character> positionsList = FXCollections.observableArrayList();\r\n        for (int i = 0; i < positions.length(); i++) {\r\n            positionsList.add(positions.charAt(i));\r\n        }\r\n        positionsChoiceBox.getItems().addAll(positionsList);\r\n        return positionsChoiceBox;\r\n    }\r\n\r\n\r\n    @FXML\r\n    public void SetCodeConfActionListener(javafx.event.ActionEvent actionEvent) {\r\n\r\n        List<Integer> selectedRotorsID = new ArrayList<>();\r\n        List<Character> selectedPositions =new ArrayList<>();\r\n        try {\r\n            for (int i = 0; i < rotorsAndPositionsHBox.getChildren().size(); i++) {\r\n                VBox rotorAndPosition=(VBox) rotorsAndPositionsHBox.getChildren().get(i);\r\n                if(rotorAndPosition==null)\r\n                    throw new Exception(\"You need to configurate all data.\");\r\n                if(((ChoiceBox<Integer>)(rotorAndPosition.getChildren().toArray()[0])).getSelectionModel().getSelectedIndex()==-1)\r\n                    throw new Exception(\"You need to select all rotors and positions.\\nPlease check rotor in column number: \" + (i+1));\r\n                int selectedID=((ChoiceBox<Integer>)(rotorAndPosition.getChildren().toArray()[0])).getSelectionModel().getSelectedItem();\r\n                if(((ChoiceBox<Character>)(rotorAndPosition.getChildren().toArray()[1])).getSelectionModel().getSelectedIndex()==-1)\r\n                    throw new Exception(\"You need to select all rotors and positions.\\nPlease check rotor in column number: \" + (i+1));\r\n                Character selectedPosition=((ChoiceBox<Character>)(rotorAndPosition.getChildren().toArray()[1])).getSelectionModel().getSelectedItem();\r\n\r\n                selectedRotorsID.add(selectedID);\r\n                selectedPositions.add(selectedPosition);\r\n            }\r\n\r\n            mEngine.checkIfRotorsValid(selectedRotorsID);\r\n            mEngine.checkIfPositionsValid(selectedPositions);\r\n\r\n            if(SelectedReflectorComboBox.getSelectionModel().getSelectedIndex()==-1)\r\n                throw new Exception(\"You need to select reflector.\");\r\n            String selectedReflector = (String) SelectedReflectorComboBox.getValue();\r\n            mEngine.setReflector(selectedReflector);\r\n\r\n            boolean withPlugBoardPairs = WithPlugBoardPairs.isSelected();\r\n            List<PlugboardPairDTO> plugBoardPairs=new ArrayList<>();\r\n            if (withPlugBoardPairs) {\r\n\r\n                for(int i=0;i<numberOfPairs;i++)\r\n                {\r\n                    if(((ChoiceBox<Character>)(firstInputVBox.getChildren().toArray()[i])).getSelectionModel().getSelectedIndex()==-1)\r\n                        throw new Exception(\"You need to select pairs.\\nPlease check pair number: \" + (i+1));\r\n                    Character firstInput = ((ChoiceBox<Character>)(firstInputVBox.getChildren().toArray()[i])).getSelectionModel().getSelectedItem();\r\n                    if(((ChoiceBox<Character>)(secondInputVBox.getChildren().toArray()[i])).getSelectionModel().getSelectedIndex()==-1)\r\n                        throw new Exception(\"You need to select pairs.\\nPlease check pair number: \" + (i+1));\r\n                    Character secondInput=((ChoiceBox<Character>)(secondInputVBox.getChildren().toArray()[i])).getSelectionModel().getSelectedItem();\r\n                    plugBoardPairs.add(new PlugboardPairDTO(firstInput,secondInput));\r\n                }\r\n                mEngine.checkPlugBoardPairs(plugBoardPairs);\r\n            } else {\r\n                mEngine.checkPlugBoardPairs(plugBoardPairs);\r\n            }\r\n\r\n            CurrentMachineCodeController.clearCurrentCodeView();\r\n            SelectedMachineCodeController.clearCurrentCodeView();\r\n\r\n            showAllCodes();\r\n            isCodeSelectedByUser.set(false);\r\n\r\n        }catch (Exception ex)\r\n        {\r\n            Alert errorAlert = new Alert(Alert.AlertType.ERROR);\r\n            errorAlert.setHeaderText(\"Invalid configuration\");\r\n            errorAlert.setContentText(ex.getMessage());\r\n            errorAlert.showAndWait();\r\n\r\n            resetAllFields();\r\n            CodeConfTabPane.getSelectionModel().select(0);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    private void showAllCodes()\r\n    {\r\n\r\n        selectedCodeScrollPane.setVisible(true);\r\n        CodeFormatDTO selectedCode = mEngine.getCodeFormat(true);\r\n\r\n        currentConfigurationLabel.setVisible(true);\r\n        configFirstLabel.setVisible(false);\r\n\r\n        SelectedCodeComponentController.SetCurrentCode(selectedCode,false);\r\n        SelectedMachineCodeController.setSelectedCode(selectedCode);\r\n        CodeConfTabPane.getSelectionModel().select(0);\r\n\r\n        CodeFormatDTO currentCode = mEngine.getCodeFormat(false);\r\n        CurrentMachineCodeController.setSelectedCode(currentCode);\r\n        setVisibleCodeFields(true);\r\n        CurrentCodeConfigurationPane.setVisible(true);\r\n        CurrentCodeComponentController.SetCurrentCode(currentCode,true);\r\n\r\n    }\r\n\r\n    private ChoiceBox<Character> SetPairsChoiceBox(String alphabet) {\r\n        ChoiceBox<Character> pairsChoiceBox = new ChoiceBox<>();\r\n        ObservableList<Character> alphabetList = FXCollections.observableArrayList();\r\n        for (int i = 0; i < alphabet.length(); i++) {\r\n            alphabetList.add(alphabet.charAt(i));\r\n        }\r\n        pairsChoiceBox.setPrefSize(70, 5);\r\n        pairsChoiceBox.getItems().addAll(alphabetList);\r\n        return pairsChoiceBox;\r\n    }\r\n\r\n    private void setPlugBoardPairs()\r\n    {\r\n        String alphabet=machineData.getAlphabetString();\r\n        firstInputVBox.getChildren().add(SetPairsChoiceBox(alphabet));\r\n        secondInputVBox.getChildren().add(SetPairsChoiceBox(alphabet));\r\n        PairsHBox.setSpacing(20);\r\n        firstInputVBox.setSpacing(10);\r\n        secondInputVBox.setSpacing(10);\r\n        numberOfPairs++;\r\n    }\r\n    public void WithPlugBoardCheckedAction(javafx.event.ActionEvent actionEvent) {\r\n\r\n        if(WithPlugBoardPairs.isSelected())\r\n              setPlugBoardPairs();\r\n    }\r\n\r\n\r\n    public void GetRandomButtonActionListener(ActionEvent actionEvent) {\r\n        resetAllFields();\r\n        disableAllFields(true);\r\n        mEngine.resetSelected();\r\n        mEngine.setCodeAutomatically();\r\n        showCodeDetails.set(true);\r\n        isSelected.set(true);\r\n        CurrentMachineCodeController.clearCurrentCodeView();\r\n        SelectedMachineCodeController.clearCurrentCodeView();\r\n        showAllCodes();\r\n        disableAllFields(false);\r\n    }\r\n\r\n    public void resetAllFields()\r\n    {\r\n        for (int i = 0; i <  rotorsAndPositionsHBox.getChildren().size(); i++) {\r\n           VBox rotorAndPositionVBOx= (VBox)(rotorsAndPositionsHBox.getChildren().get(i));\r\n           ChoiceBox<Integer> rotorID = (ChoiceBox<Integer>) (rotorAndPositionVBOx.getChildren().get(0));\r\n            ChoiceBox<Character> positions = (ChoiceBox<Character>) (rotorAndPositionVBOx.getChildren().get(1));\r\n            for (int j = 0; j <rotorID.getItems().size() ; j++) {\r\n                rotorID.getItems().remove(j);\r\n                positions.getItems().remove(j);\r\n            }\r\n            rotorID.getItems().clear();\r\n            positions.getItems().clear();\r\n            ((VBox)(rotorsAndPositionsHBox.getChildren().get(i))).getChildren().clear();\r\n        }\r\n        rotorsAndPositionsHBox.getChildren().clear();\r\n\r\n        SelectedReflectorComboBox.getItems().clear();\r\n        WithPlugBoardPairs.setSelected(false);\r\n\r\n        VBox firstInputs=(VBox)PairsHBox.getChildren().get(0);\r\n        VBox secondInputs=(VBox)PairsHBox.getChildren().get(1);\r\n        for (int i = 0; i < firstInputs.getChildren().size(); i++) {\r\n            ChoiceBox<Character> firstInputFromPair = ( ChoiceBox<Character>)firstInputs.getChildren().get(i);\r\n            ChoiceBox<Character> secondInputFromPair = ( ChoiceBox<Character>)secondInputs.getChildren().get(i);\r\n            for (int j = 0; j <firstInputFromPair.getItems().size() ; j++) {\r\n                firstInputFromPair.getItems().remove(j);\r\n                secondInputFromPair.getItems().remove(j);\r\n            }\r\n            firstInputFromPair.getItems().clear();\r\n            secondInputFromPair.getItems().clear();\r\n        }\r\n        firstInputs.getChildren().clear();;\r\n        secondInputs.getChildren().clear();\r\n\r\n        CurrentCodeComponentController.resetFields();\r\n        SelectedCodeComponentController.resetFields();\r\n        CodeConfTabPane.getSelectionModel().select(0);\r\n        setInitializeConfiguration();\r\n        isSelected.set(false);\r\n        isCodeSelectedByUser.set(false);\r\n    }\r\n\r\n    private void disableAllFields(boolean toDisable)\r\n    {\r\n        rotorsAndPositionsHBox.setDisable(toDisable);\r\n        PairsHBox.setDisable(toDisable);\r\n        SelectedReflectorComboBox.setDisable(toDisable);\r\n        WithPlugBoardPairs.setDisable(toDisable);\r\n        AddMorePairsButton.setDisable(toDisable);\r\n        removePlugBoardPairButton.setDisable(toDisable);\r\n    }\r\n\r\n    public void ResetAllFieldsButtonActionListener(ActionEvent actionEvent) {\r\n        disableAllFields(false);\r\n        resetAllFields();\r\n    }\r\n\r\n    public void SelecteReflectorActionListener(ActionEvent actionEvent) {\r\n        isCodeSelectedByUser.set(true);\r\n        isSelected.set(true);\r\n        showCodeDetails.set(true);\r\n    }\r\n\r\n    public void addMorePairsButtonOnAction(ActionEvent actionEvent) {\r\n        setPlugBoardPairs();\r\n    }\r\n\r\n    public void removePlugBoardPairOnAction(ActionEvent actionEvent) {\r\n        firstInputVBox.getChildren().remove(firstInputVBox.getChildren().size()-1);\r\n        secondInputVBox.getChildren().remove(secondInputVBox.getChildren().size()-1);\r\n        numberOfPairs--;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/UI/src/UI/application/MachineConfTab/MachineConfigurationController.java b/UI/src/UI/application/MachineConfTab/MachineConfigurationController.java
--- a/UI/src/UI/application/MachineConfTab/MachineConfigurationController.java	(revision 166f79bcaf7777d3041c7ee0c58402a9d22e1c30)
+++ b/UI/src/UI/application/MachineConfTab/MachineConfigurationController.java	(date 1662285292580)
@@ -79,12 +79,10 @@
         }
 
         SetCodeConfButton.disableProperty().bind(isCodeSelectedByUser.not());
-        selectedCodeConfigScrollPane.visibleProperty().bind(showCodeDetails);
-        currentCodeScrollPane.visibleProperty().bind(showCodeDetails);
+        selectedCodeConfigScrollPane.disableProperty().bind(showCodeDetails.not());
+        currentCodeScrollPane.disableProperty().bind(showCodeDetails.not());
         selectedMachineCodeLabel.visibleProperty().bind(showCodeDetails);
         currentMachineLabel.visibleProperty().bind(showCodeDetails);
-
-
     }
     public MachineConfigurationController()
     {
Index: UI/src/UI/AllMachine/AllMachineCSS.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/UI/src/UI/AllMachine/AllMachineCSS.css b/UI/src/UI/AllMachine/AllMachineCSS.css
new file mode 100644
--- /dev/null	(date 1662284662072)
+++ b/UI/src/UI/AllMachine/AllMachineCSS.css	(date 1662284662072)
@@ -0,0 +1,4 @@
+#First-Load-File-Label{
+    -fx-background-color: Yellow;
+
+}
\ No newline at end of file
Index: UI/src/UI/application/encryptTab/encryptComponent/automaticEncrypt/AutomaticEncryptController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package UI.applicationGUI.encryptTab.encryptComponent.automaticEncrypt;\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport UI.applicationGUI.encryptTab.encryptComponent.EncryptComponentController;\r\nimport enigmaEngine.Encryptor;\r\nimport javafx.beans.property.StringProperty;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.TextField;\r\n\r\npublic class AutomaticEncryptController {\r\n\r\n        Encryptor encryptor;\r\n        @FXML\r\n        private Button processEncryptButton;\r\n\r\n        @FXML\r\n        private Button clearTextFieldButton;\r\n        @FXML\r\n        private TextField stringInputTextField;\r\n        private StringProperty outputProperty;\r\n\r\n\r\n\r\n    private EncryptComponentController encryptComponentController;\r\n    public void setEncryptComponentController(EncryptComponentController encryptComponentController) {\r\n        this.encryptComponentController = encryptComponentController;\r\n    }\r\n        @FXML\r\n        void processStringData(ActionEvent event) {\r\n            outputProperty.setValue( encryptor.processDataInput(stringInputTextField.getText()));//update output label on component\r\n            encryptComponentController.doneProcessData(); //Pop up process done to parent\r\n        }\r\n        @FXML public void clearTextFieldInput(ActionEvent event) {\r\n            stringInputTextField.clear();\r\n        }\r\n\r\n        public void setEncryptor(Encryptor encryptor) {\r\n            this.encryptor = encryptor;\r\n        }\r\n\r\n        public void bindOutputPropertyFromParent(StringProperty outputPropertyParent) {\r\n            outputProperty=outputPropertyParent;\r\n        }\r\n\r\n    @FXML\r\n    private void initialize() {\r\n\r\n            assert processEncryptButton != null : \"fx:id=\\\"processEncryptButton\\\" was not injected: check your FXML file 'automaticEncrypt.fxml'.\";\r\n            assert clearTextFieldButton != null : \"fx:id=\\\"clearTextFieldButton\\\" was not injected: check your FXML file 'automaticEncrypt.fxml'.\";\r\n            assert stringInputTextField != null : \"fx:id=\\\"stringInput\\\" was not injected: check your FXML file 'automaticEncrypt.fxml'.\";\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/UI/src/UI/application/encryptTab/encryptComponent/automaticEncrypt/AutomaticEncryptController.java b/UI/src/UI/application/encryptTab/encryptComponent/automaticEncrypt/AutomaticEncryptController.java
--- a/UI/src/UI/application/encryptTab/encryptComponent/automaticEncrypt/AutomaticEncryptController.java	(revision 166f79bcaf7777d3041c7ee0c58402a9d22e1c30)
+++ b/UI/src/UI/application/encryptTab/encryptComponent/automaticEncrypt/AutomaticEncryptController.java	(date 1662284661920)
@@ -1,11 +1,7 @@
-package UI.applicationGUI.encryptTab.encryptComponent.automaticEncrypt;
-
-
-
+package UI.application.encryptTab.encryptComponent.automaticEncrypt;
 
 
-
-import UI.applicationGUI.encryptTab.encryptComponent.EncryptComponentController;
+import UI.application.encryptTab.encryptComponent.EncryptComponentController;
 import enigmaEngine.Encryptor;
 import javafx.beans.property.StringProperty;
 import javafx.event.ActionEvent;
Index: Engine/src/Resources/manyROtors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Engine/src/Resources/manyROtors.xml b/Engine/src/Resources/manyROtors.xml
new file mode 100644
--- /dev/null	(date 1662284662089)
+++ b/Engine/src/Resources/manyROtors.xml	(date 1662284662089)
@@ -0,0 +1,223 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<CTE-Enigma xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="Enigma-Ex1.xsd">
+	<CTE-Machine rotors-count="7">
+		<ABC>
+			ABCDEFGHIJKLMNOPQRSTUVWXYZ
+		</ABC>
+		<CTE-Rotors>
+			<CTE-Rotor id="1" notch="17">
+				<CTE-Positioning right="E" left="A"/>
+				<CTE-Positioning right="K" left="B"/>
+				<CTE-Positioning right="M" left="C"/>
+				<CTE-Positioning right="F" left="D"/>
+				<CTE-Positioning right="L" left="E"/>
+				<CTE-Positioning right="G" left="F"/>
+				<CTE-Positioning right="D" left="G"/>
+				<CTE-Positioning right="Q" left="H"/>
+				<CTE-Positioning right="V" left="I"/>
+				<CTE-Positioning right="Z" left="J"/>
+				<CTE-Positioning right="N" left="K"/>
+				<CTE-Positioning right="T" left="L"/>
+				<CTE-Positioning right="O" left="M"/>
+				<CTE-Positioning right="W" left="N"/>
+				<CTE-Positioning right="Y" left="O"/>
+				<CTE-Positioning right="H" left="P"/>
+				<CTE-Positioning right="X" left="Q"/>
+				<CTE-Positioning right="U" left="R"/>
+				<CTE-Positioning right="S" left="S"/>
+				<CTE-Positioning right="P" left="T"/>
+				<CTE-Positioning right="A" left="U"/>
+				<CTE-Positioning right="I" left="V"/>
+				<CTE-Positioning right="B" left="W"/>
+				<CTE-Positioning right="R" left="X"/>
+				<CTE-Positioning right="C" left="Y"/>
+				<CTE-Positioning right="J" left="Z"/>
+			</CTE-Rotor>
+			<CTE-Rotor id="2" notch="5">
+				<CTE-Positioning right="A" left="A"/>
+				<CTE-Positioning right="J" left="B"/>
+				<CTE-Positioning right="D" left="C"/>
+				<CTE-Positioning right="K" left="D"/>
+				<CTE-Positioning right="S" left="E"/>
+				<CTE-Positioning right="I" left="F"/>
+				<CTE-Positioning right="R" left="G"/>
+				<CTE-Positioning right="U" left="H"/>
+				<CTE-Positioning right="X" left="I"/>
+				<CTE-Positioning right="B" left="J"/>
+				<CTE-Positioning right="L" left="K"/>
+				<CTE-Positioning right="H" left="L"/>
+				<CTE-Positioning right="W" left="M"/>
+				<CTE-Positioning right="T" left="N"/>
+				<CTE-Positioning right="M" left="O"/>
+				<CTE-Positioning right="C" left="P"/>
+				<CTE-Positioning right="Q" left="Q"/>
+				<CTE-Positioning right="G" left="R"/>
+				<CTE-Positioning right="Z" left="S"/>
+				<CTE-Positioning right="N" left="T"/>
+				<CTE-Positioning right="P" left="U"/>
+				<CTE-Positioning right="Y" left="V"/>
+				<CTE-Positioning right="F" left="W"/>
+				<CTE-Positioning right="V" left="X"/>
+				<CTE-Positioning right="O" left="Y"/>
+				<CTE-Positioning right="E" left="Z"/>
+			</CTE-Rotor>
+			<CTE-Rotor id="3" notch="22">
+				<CTE-Positioning right="B" left="A"/>
+				<CTE-Positioning right="D" left="B"/>
+				<CTE-Positioning right="F" left="C"/>
+				<CTE-Positioning right="H" left="D"/>
+				<CTE-Positioning right="J" left="E"/>
+				<CTE-Positioning right="L" left="F"/>
+				<CTE-Positioning right="C" left="G"/>
+				<CTE-Positioning right="P" left="H"/>
+				<CTE-Positioning right="R" left="I"/>
+				<CTE-Positioning right="T" left="J"/>
+				<CTE-Positioning right="X" left="K"/>
+				<CTE-Positioning right="V" left="L"/>
+				<CTE-Positioning right="Z" left="M"/>
+				<CTE-Positioning right="N" left="N"/>
+				<CTE-Positioning right="Y" left="O"/>
+				<CTE-Positioning right="E" left="P"/>
+				<CTE-Positioning right="I" left="Q"/>
+				<CTE-Positioning right="W" left="R"/>
+				<CTE-Positioning right="G" left="S"/>
+				<CTE-Positioning right="A" left="T"/>
+				<CTE-Positioning right="K" left="U"/>
+				<CTE-Positioning right="M" left="V"/>
+				<CTE-Positioning right="U" left="W"/>
+				<CTE-Positioning right="S" left="X"/>
+				<CTE-Positioning right="Q" left="Y"/>
+				<CTE-Positioning right="O" left="Z"/>
+			</CTE-Rotor>
+			<CTE-Rotor id="4" notch="20">
+				<CTE-Positioning right="E" left="A"/>
+				<CTE-Positioning right="K" left="B"/>
+				<CTE-Positioning right="M" left="C"/>
+				<CTE-Positioning right="F" left="D"/>
+				<CTE-Positioning right="L" left="E"/>
+				<CTE-Positioning right="G" left="F"/>
+				<CTE-Positioning right="D" left="G"/>
+				<CTE-Positioning right="Q" left="H"/>
+				<CTE-Positioning right="V" left="I"/>
+				<CTE-Positioning right="Z" left="J"/>
+				<CTE-Positioning right="N" left="K"/>
+				<CTE-Positioning right="T" left="L"/>
+				<CTE-Positioning right="O" left="M"/>
+				<CTE-Positioning right="W" left="N"/>
+				<CTE-Positioning right="Y" left="O"/>
+				<CTE-Positioning right="H" left="P"/>
+				<CTE-Positioning right="X" left="Q"/>
+				<CTE-Positioning right="U" left="R"/>
+				<CTE-Positioning right="S" left="S"/>
+				<CTE-Positioning right="P" left="T"/>
+				<CTE-Positioning right="A" left="U"/>
+				<CTE-Positioning right="I" left="V"/>
+				<CTE-Positioning right="B" left="W"/>
+				<CTE-Positioning right="R" left="X"/>
+				<CTE-Positioning right="C" left="Y"/>
+				<CTE-Positioning right="J" left="Z"/>
+			</CTE-Rotor>
+			<CTE-Rotor id="5" notch="6">
+				<CTE-Positioning right="E" left="A"/>
+				<CTE-Positioning right="K" left="B"/>
+				<CTE-Positioning right="M" left="C"/>
+				<CTE-Positioning right="F" left="D"/>
+				<CTE-Positioning right="L" left="E"/>
+				<CTE-Positioning right="G" left="F"/>
+				<CTE-Positioning right="D" left="G"/>
+				<CTE-Positioning right="Q" left="H"/>
+				<CTE-Positioning right="V" left="I"/>
+				<CTE-Positioning right="Z" left="J"/>
+				<CTE-Positioning right="N" left="K"/>
+				<CTE-Positioning right="T" left="L"/>
+				<CTE-Positioning right="O" left="M"/>
+				<CTE-Positioning right="W" left="N"/>
+				<CTE-Positioning right="Y" left="O"/>
+				<CTE-Positioning right="H" left="P"/>
+				<CTE-Positioning right="X" left="Q"/>
+				<CTE-Positioning right="U" left="R"/>
+				<CTE-Positioning right="S" left="S"/>
+				<CTE-Positioning right="P" left="T"/>
+				<CTE-Positioning right="A" left="U"/>
+				<CTE-Positioning right="I" left="V"/>
+				<CTE-Positioning right="B" left="W"/>
+				<CTE-Positioning right="R" left="X"/>
+				<CTE-Positioning right="C" left="Y"/>
+				<CTE-Positioning right="J" left="Z"/>
+			</CTE-Rotor>
+			<CTE-Rotor id="6" notch="17">
+				<CTE-Positioning right="E" left="A"/>
+				<CTE-Positioning right="K" left="B"/>
+				<CTE-Positioning right="M" left="C"/>
+				<CTE-Positioning right="F" left="D"/>
+				<CTE-Positioning right="L" left="E"/>
+				<CTE-Positioning right="G" left="F"/>
+				<CTE-Positioning right="D" left="G"/>
+				<CTE-Positioning right="Q" left="H"/>
+				<CTE-Positioning right="V" left="I"/>
+				<CTE-Positioning right="Z" left="J"/>
+				<CTE-Positioning right="N" left="K"/>
+				<CTE-Positioning right="T" left="L"/>
+				<CTE-Positioning right="O" left="M"/>
+				<CTE-Positioning right="W" left="N"/>
+				<CTE-Positioning right="Y" left="O"/>
+				<CTE-Positioning right="H" left="P"/>
+				<CTE-Positioning right="X" left="Q"/>
+				<CTE-Positioning right="U" left="R"/>
+				<CTE-Positioning right="S" left="S"/>
+				<CTE-Positioning right="P" left="T"/>
+				<CTE-Positioning right="A" left="U"/>
+				<CTE-Positioning right="I" left="V"/>
+				<CTE-Positioning right="B" left="W"/>
+				<CTE-Positioning right="R" left="X"/>
+				<CTE-Positioning right="C" left="Y"/>
+				<CTE-Positioning right="J" left="Z"/>
+			</CTE-Rotor>
+			<CTE-Rotor id="7" notch="17">
+				<CTE-Positioning right="E" left="A"/>
+				<CTE-Positioning right="K" left="B"/>
+				<CTE-Positioning right="M" left="C"/>
+				<CTE-Positioning right="F" left="D"/>
+				<CTE-Positioning right="L" left="E"/>
+				<CTE-Positioning right="G" left="F"/>
+				<CTE-Positioning right="D" left="G"/>
+				<CTE-Positioning right="Q" left="H"/>
+				<CTE-Positioning right="V" left="I"/>
+				<CTE-Positioning right="Z" left="J"/>
+				<CTE-Positioning right="N" left="K"/>
+				<CTE-Positioning right="T" left="L"/>
+				<CTE-Positioning right="O" left="M"/>
+				<CTE-Positioning right="W" left="N"/>
+				<CTE-Positioning right="Y" left="O"/>
+				<CTE-Positioning right="H" left="P"/>
+				<CTE-Positioning right="X" left="Q"/>
+				<CTE-Positioning right="U" left="R"/>
+				<CTE-Positioning right="S" left="S"/>
+				<CTE-Positioning right="P" left="T"/>
+				<CTE-Positioning right="A" left="U"/>
+				<CTE-Positioning right="I" left="V"/>
+				<CTE-Positioning right="B" left="W"/>
+				<CTE-Positioning right="R" left="X"/>
+				<CTE-Positioning right="C" left="Y"/>
+				<CTE-Positioning right="J" left="Z"/>
+			</CTE-Rotor>
+		</CTE-Rotors>
+		<CTE-Reflectors>
+			<CTE-Reflector id="I">
+				<CTE-Reflect input="1" output="25"/>
+				<CTE-Reflect input="2" output="18"/>
+				<CTE-Reflect input="3" output="21"/>
+				<CTE-Reflect input="4" output="8"/>
+				<CTE-Reflect input="5" output="17"/>
+				<CTE-Reflect input="6" output="19"/>
+				<CTE-Reflect input="7" output="12"/>
+				<CTE-Reflect input="9" output="16"/>
+				<CTE-Reflect input="10" output="24"/>
+				<CTE-Reflect input="11" output="14"/>
+				<CTE-Reflect input="13" output="15"/>
+				<CTE-Reflect input="20" output="26"/>
+				<CTE-Reflect input="22" output="23"/>
+			</CTE-Reflector>
+		</CTE-Reflectors>
+	</CTE-Machine>	
+</CTE-Enigma>
Index: UI/src/UI/application/encryptTab/encryptComponent/manualEncrypt/ManualEncryptController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package UI.applicationGUI.encryptTab.encryptComponent.manualEncrypt;\r\n\r\nimport UI.applicationGUI.encryptTab.encryptComponent.EncryptComponentController;\r\nimport enigmaEngine.Encryptor;\r\nimport javafx.beans.property.StringProperty;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.scene.control.TextField;\r\nimport javafx.scene.input.KeyEvent;\r\n\r\n\r\npublic class ManualEncryptController {\r\n\r\n\r\n        @FXML\r\n        private TextField textInputField;\r\n        private StringProperty outputProperty;\r\n        private Encryptor encryptor;\r\n        private String input=\"\";\r\n        private EncryptComponentController encryptComponentController;\r\n        public void setEncryptComponentController(EncryptComponentController encryptComponentController) {\r\n                this.encryptComponentController = encryptComponentController;\r\n        }\r\n        @FXML\r\n        private void doneGettingInput(ActionEvent event) {\r\n               // System.out.println(\"press done!\");\r\n                encryptor.addOutputStringToStatics(input,outputProperty.getValue());\r\n                input=\"\";\r\n                encryptComponentController.doneProcessData(); //Pop up process done to parent\r\n        }\r\n//        public void clearTextFieldInput(ActionEvent event) {\r\n//                textInputField.clear();\r\n//        }\r\n        @FXML\r\n        private void processSingleCharacter(KeyEvent event) {\r\n                System.out.println(\"enter key\");\r\n                input=textInputField.getText();\r\n              //  outputProperty.setValue(outputProperty.getValue()+textInputField.getText());\r\n               textInputField.clear();\r\n        }\r\n        public void bindOutputPropertyFromParent(StringProperty outputPropertyParent) {\r\n                outputProperty=outputPropertyParent;\r\n        }\r\n        public void setEncryptor(Encryptor encryptor) {\r\n                this.encryptor = encryptor;\r\n        }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/UI/src/UI/application/encryptTab/encryptComponent/manualEncrypt/ManualEncryptController.java b/UI/src/UI/application/encryptTab/encryptComponent/manualEncrypt/ManualEncryptController.java
--- a/UI/src/UI/application/encryptTab/encryptComponent/manualEncrypt/ManualEncryptController.java	(revision 166f79bcaf7777d3041c7ee0c58402a9d22e1c30)
+++ b/UI/src/UI/application/encryptTab/encryptComponent/manualEncrypt/ManualEncryptController.java	(date 1662284661933)
@@ -1,6 +1,6 @@
-package UI.applicationGUI.encryptTab.encryptComponent.manualEncrypt;
+package UI.application.encryptTab.encryptComponent.manualEncrypt;
 
-import UI.applicationGUI.encryptTab.encryptComponent.EncryptComponentController;
+import UI.application.encryptTab.encryptComponent.EncryptComponentController;
 import enigmaEngine.Encryptor;
 import javafx.beans.property.StringProperty;
 import javafx.event.ActionEvent;
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_8\" default=\"true\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 166f79bcaf7777d3041c7ee0c58402a9d22e1c30)
+++ b/.idea/misc.xml	(date 1662284662062)
@@ -1,5 +1,8 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
+  <component name="ProjectResources">
+    <resource url="xmlns" location="$PROJECT_DIR$/UI/src/UI/AllMachine/AllMachine.fxml" />
+  </component>
   <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
Index: UI/src/UI/application/encryptTab/EncryptTabController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package UI.applicationGUI.encryptTab;\r\n\r\nimport UI.applicationGUI.generalComponents.codeFormat.SimpleCode.SimpleCodeController;\r\nimport UI.applicationGUI.encryptTab.encryptComponent.EncryptComponentController;\r\nimport UI.applicationGUI.encryptTab.statisticsComponent.StatisticsComponentController;\r\nimport enigmaEngine.Engine;\r\nimport javafx.beans.property.ReadOnlyDoubleProperty;\r\nimport javafx.fxml.FXML;\r\nimport javafx.scene.layout.BorderPane;\r\nimport javafx.scene.layout.GridPane;\r\nimport javafx.scene.layout.HBox;\r\nimport javafx.scene.layout.VBox;\r\n\r\npublic class EncryptTabController {\r\n\r\n    @FXML public BorderPane mainPaneTab;\r\n    //Current Machine Configuration\r\n    @FXML\r\n    private HBox codeComponent;\r\n    @FXML\r\n    private SimpleCodeController codeComponentController;\r\n    //Statistics Component\r\n    @FXML\r\n    private GridPane statisticsComponent;\r\n    @FXML\r\n    private StatisticsComponentController statisticsComponentController;\r\n\r\n    // Encrypt\\Decrypt Component\r\n    @FXML\r\n    private VBox encryptComponent;\r\n    @FXML\r\n    private EncryptComponentController encryptComponentController;\r\n\r\n    private Engine enigmaEngine;\r\n\r\n    public void bindComponentsWidthToScene(ReadOnlyDoubleProperty widthProperty,ReadOnlyDoubleProperty heightProperty)\r\n    {\r\n        System.out.println(\"before binding 1\");\r\n//        statisticsComponent.prefHeightProperty().bind(heightProperty);\r\n        mainPaneTab.prefWidthProperty().bind(widthProperty);\r\n        mainPaneTab.prefHeightProperty().bind(heightProperty);\r\n        statisticsComponent.prefWidthProperty().bind(mainPaneTab.widthProperty());\r\n        System.out.println(\"before binding 2\");\r\n//        codeComponent.prefHeightProperty().bind(mainPaneTab.heightProperty());\r\n        codeComponent.prefWidthProperty().bind(mainPaneTab.widthProperty());\r\n\r\n        statisticsComponentController.bindSizePropertyToParent(mainPaneTab.widthProperty(),mainPaneTab.heightProperty());\r\n    }\r\n\r\n\r\n    public void setEnigmaEngine(Engine enigmaEngine) {\r\n        this.enigmaEngine = enigmaEngine;\r\n        encryptComponentController.setEncryptor(enigmaEngine);\r\n    }\r\n    public void doneProcessData()\r\n    {\r\n        statisticsComponentController.updateCodeStatisticsView(enigmaEngine.getStatisticDataDTO());\r\n    }\r\n    @FXML\r\n    private void initialize() {\r\n\r\n        encryptComponentController.setParentComponentTab(this);\r\n\r\n\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/UI/src/UI/application/encryptTab/EncryptTabController.java b/UI/src/UI/application/encryptTab/EncryptTabController.java
--- a/UI/src/UI/application/encryptTab/EncryptTabController.java	(revision 166f79bcaf7777d3041c7ee0c58402a9d22e1c30)
+++ b/UI/src/UI/application/encryptTab/EncryptTabController.java	(date 1662284661947)
@@ -1,7 +1,9 @@
-package UI.applicationGUI.encryptTab;
-
+package UI.application.encryptTab;
+import UI.application.encryptTab.encryptComponent.EncryptComponentController;
 import UI.applicationGUI.generalComponents.codeFormat.SimpleCode.SimpleCodeController;
-import UI.applicationGUI.encryptTab.encryptComponent.EncryptComponentController;
+
+
+import UI.application.encryptTab.encryptComponent.EncryptComponentController;
 import UI.applicationGUI.encryptTab.statisticsComponent.StatisticsComponentController;
 import enigmaEngine.Engine;
 import javafx.beans.property.ReadOnlyDoubleProperty;
@@ -60,8 +62,6 @@
     private void initialize() {
 
         encryptComponentController.setParentComponentTab(this);
-
-
     }
 
 }
Index: UI/src/UI/TEST_GUI/HelloFxmlMain2.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package UI.TEST_GUI;\r\nimport UI.applicationGUI.generalComponents.codeFormat.SimpleCode.SimpleCodeController;\r\nimport UI.applicationGUI.encryptTab.EncryptTabController;\r\nimport UI.applicationGUI.encryptTab.encryptComponent.EncryptComponentController;\r\nimport UI.applicationGUI.encryptTab.statisticsComponent.StatisticsComponentController;\r\nimport dtoObjects.CodeFormatDTO;\r\nimport dtoObjects.PlugboardPairDTO;\r\nimport dtoObjects.RotorInfoDTO;\r\nimport dtoObjects.StatisticRecordDTO;\r\nimport javafx.application.Application;\r\nimport javafx.application.Platform;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.io.IOException;\r\nimport java.net.URL;\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Map;\r\n\r\nimport static UI.applicationGUI.CommonResourcesPaths.*;\r\n\r\n\r\n//video: 100189 - FXML Hello World [JAD, JavaFX] | Powered by SpeaCode\r\npublic class HelloFxmlMain2 extends Application{\r\n\r\n    @Override\r\n    public void start(Stage primaryStage) throws Exception {\r\n        startTester(primaryStage);\r\n//        start1(primaryStage);\r\n\r\n//         start2(primaryStage);\r\n//        start3(primaryStage);\r\n//        start3(primaryStage);\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n    private void start1(Stage primaryStage) throws IOException {\r\n\r\n        FXMLLoader fxmlLoader = new FXMLLoader();\r\n\r\n        URL url = getClass().getClassLoader().getResource(\"UI/application/encryptTab/encryptTab.fxml\");\r\n        System.out.println(\"before 1\");\r\n        fxmlLoader.setLocation(url);\r\n        System.out.println(\"before 2\");\r\n        assert url != null;\r\n        System.out.println(\"before 2.5:\"+url);\r\n        Parent load = fxmlLoader.load(url.openStream());\r\n        System.out.println(\"before 3\");\r\n//        TableStatisticRecordController controller= fxmlLoader.getController();\r\n        EncryptTabController controller= fxmlLoader.getController();\r\n        System.out.println(\"before 4\");\r\n        List<StatisticRecordDTO> statisticRecordDTOList=new ArrayList<>();\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"aaa\",\"bbb\",500));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        System.out.println(\"before 7\");\r\n//        controller.addRecordsToStatisticTable(statisticRecordDTOList);\r\n        Map<CodeFormatDTO, List<StatisticRecordDTO>> statisticsDataHistory= new HashMap<>();\r\n        RotorInfoDTO[] rotorInfoDTOS=new RotorInfoDTO[2];\r\n        List<PlugboardPairDTO> plugboardPairDTOList=new ArrayList<>();\r\n        CodeFormatDTO codeFormatDTO=new CodeFormatDTO(rotorInfoDTOS,\"I\",plugboardPairDTOList);\r\n        statisticsDataHistory.put(codeFormatDTO,statisticRecordDTOList);\r\n        rotorInfoDTOS[0]=new RotorInfoDTO(1,5,'A');\r\n        rotorInfoDTOS[1]=new RotorInfoDTO(2,10,'N');\r\n        codeFormatDTO=new CodeFormatDTO(rotorInfoDTOS,\"II\",plugboardPairDTOList);\r\n        plugboardPairDTOList=new ArrayList<>();\r\n        plugboardPairDTOList.add(new PlugboardPairDTO('A','B'));\r\n        plugboardPairDTOList.add(new PlugboardPairDTO('G','E'));\r\n        statisticsDataHistory.put(codeFormatDTO,statisticRecordDTOList);\r\n        statisticRecordDTOList=new ArrayList<>();\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"aaa\",\"bbb\",500));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        codeFormatDTO=new CodeFormatDTO(rotorInfoDTOS,\"IV\",plugboardPairDTOList);\r\n\r\n        statisticsDataHistory.put(codeFormatDTO,statisticRecordDTOList);\r\n        statisticRecordDTOList=new ArrayList<>();\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"aaa\",\"bbb\",500));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        codeFormatDTO=new CodeFormatDTO(rotorInfoDTOS,\"V\",plugboardPairDTOList);\r\n        statisticRecordDTOList=new ArrayList<>();\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"aaa\",\"bbb\",500));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticsDataHistory.put(codeFormatDTO,statisticRecordDTOList);\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"rrr\",\"aaa\",600));\r\n        statisticsDataHistory.put(codeFormatDTO,statisticRecordDTOList);\r\n\r\n\r\n        //controller.updateCodeStatisticsView(statisticsDataHistory);\r\n\r\n        System.out.println(\"before 8\");\r\n        Scene scene = new Scene(load,800,600);\r\n        System.out.println(\"before 9\");\r\n        primaryStage.setScene(scene);\r\n        controller.bindComponentsWidthToScene(scene.widthProperty(),scene.heightProperty());\r\n        primaryStage.show();\r\n\r\n    }\r\n    private void start3(Stage primaryStage) throws IOException, InterruptedException {\r\n\r\n        FXMLLoader fxmlLoader = new FXMLLoader();\r\n\r\n        URL url = getClass().getClassLoader().getResource(SIMPLE_CODE_FORMAT);\r\n        fxmlLoader.setLocation(url);\r\n        assert url != null;\r\n        Parent load = fxmlLoader.load(url.openStream());\r\n\r\n        Scene scene = new Scene(load);\r\n        primaryStage.setScene(scene);\r\n        primaryStage.show();\r\n//        TableStatisticRecordController controller= fxmlLoader.getController();\r\n        SimpleCodeController controller= fxmlLoader.getController();\r\n\r\n        RotorInfoDTO[] rotorInfoDTOS=new RotorInfoDTO[2];\r\n        List<PlugboardPairDTO> plugboardPairDTOList=new ArrayList<>();\r\n        rotorInfoDTOS[0]=new RotorInfoDTO(1,5,'A');\r\n        rotorInfoDTOS[1]=new RotorInfoDTO(2,10,'N');\r\n        CodeFormatDTO codeFormatDTO=new CodeFormatDTO(rotorInfoDTOS,\"I\",plugboardPairDTOList);\r\n        CodeFormatDTO finalCodeFormatDTO = codeFormatDTO;\r\n        Platform.runLater(()->{\r\n            controller.clearCurrentCodeView();\r\n            controller.setSelectedCode(finalCodeFormatDTO);\r\n        });\r\n\r\n        Thread.sleep(2000);\r\n        plugboardPairDTOList=new ArrayList<>();\r\n        plugboardPairDTOList.add(new PlugboardPairDTO('A','B'));\r\n        plugboardPairDTOList.add(new PlugboardPairDTO('G','E'));\r\n        CodeFormatDTO finalCodeFormatDTO2 = codeFormatDTO;\r\n        Platform.runLater(()->{\r\n            controller.clearCurrentCodeView();\r\n            controller.setSelectedCode(finalCodeFormatDTO2);\r\n        });\r\n\r\n        Thread.sleep(2000);\r\n        codeFormatDTO=new CodeFormatDTO(rotorInfoDTOS,\"IV\",plugboardPairDTOList);\r\n        CodeFormatDTO finalCodeFormatDTO3 = codeFormatDTO;\r\n        Platform.runLater(()->{\r\n            controller.clearCurrentCodeView();\r\n            controller.setSelectedCode(finalCodeFormatDTO3);\r\n        });\r\n        Thread.sleep(2000);\r\n        plugboardPairDTOList=new ArrayList<>();\r\n        codeFormatDTO=new CodeFormatDTO(rotorInfoDTOS,\"V\",plugboardPairDTOList);\r\n        Thread.sleep(2000);\r\n\r\n    }\r\n    private void startTester(Stage primaryStage) throws IOException {\r\n        primaryStage.setTitle(\"Enigma Machine\");\r\n        FXMLLoader fxmlLoader = new FXMLLoader();\r\n        URL url = getClass().getResource(\"UI/application/MachineConfTab/MachineConfig.fxml\");\r\n        fxmlLoader.setLocation(url);\r\n        assert url != null;\r\n        Parent root = fxmlLoader.load(url.openStream());\r\n        Scene scene = new Scene(root, 1000, 900);\r\n        primaryStage.setScene(scene);\r\n        primaryStage.show();\r\n    }\r\n    private void start2(Stage primaryStage) throws IOException {\r\n\r\n\r\n        primaryStage.setTitle(\"Hello There in FXML\");\r\n        FXMLLoader fxmlLoader = new FXMLLoader();\r\n\r\n        URL url = getClass().getClassLoader().getResource(\"UI/application/encryptTab/statisticsComponent/statisticsCodeComponent.fxml\");\r\n        System.out.println(\"before 1\");\r\n        fxmlLoader.setLocation(url);\r\n        System.out.println(\"before 2\");\r\n        assert url != null;\r\n        System.out.println(\"before 2.5:\"+url);\r\n        Parent load = fxmlLoader.load(url.openStream());\r\n        System.out.println(\"before 3\");\r\n//        TableStatisticRecordController controller= fxmlLoader.getController();\r\n\r\n        StatisticsComponentController controller= fxmlLoader.getController();\r\n        System.out.println(\"before 4\");\r\n        Map<CodeFormatDTO, List<StatisticRecordDTO>> statisticsDataHistory= new HashMap<>();\r\n        RotorInfoDTO[] rotorInfoDTOS=new RotorInfoDTO[2];\r\n        rotorInfoDTOS[0]=new RotorInfoDTO(1,5,'A');\r\n        rotorInfoDTOS[1]=new RotorInfoDTO(2,10,'N');\r\n        List<PlugboardPairDTO> plugboardPairDTOList=new ArrayList<>();\r\n        plugboardPairDTOList.add(new PlugboardPairDTO('G','Q'));\r\n        plugboardPairDTOList.add(new PlugboardPairDTO('F','E'));\r\n        CodeFormatDTO codeFormatDTO=new CodeFormatDTO(rotorInfoDTOS,\"1\",plugboardPairDTOList);\r\n\r\n        List<StatisticRecordDTO> statisticRecordDTOList=new ArrayList<>();\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"aaa\",\"bbb\",500));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticsDataHistory.put(codeFormatDTO,statisticRecordDTOList);\r\n\r\n        plugboardPairDTOList=new ArrayList<>();\r\n        plugboardPairDTOList.add(new PlugboardPairDTO('F','G'));\r\n        codeFormatDTO=new CodeFormatDTO(rotorInfoDTOS,\"2\",plugboardPairDTOList);\r\n        statisticRecordDTOList=new ArrayList<>();\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"ddd\",\"ccc\",600));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"lll\",\"qqq\",600));\r\n        statisticsDataHistory.put(codeFormatDTO,statisticRecordDTOList);\r\n\r\n        plugboardPairDTOList=new ArrayList<>();\r\n        plugboardPairDTOList.add(new PlugboardPairDTO('A','B'));\r\n        plugboardPairDTOList.add(new PlugboardPairDTO('G','E'));\r\n        codeFormatDTO=new CodeFormatDTO(rotorInfoDTOS,\"3\",plugboardPairDTOList);\r\n        statisticRecordDTOList=new ArrayList<>();\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"aaa\",\"bbb\",668));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"fff\",\"ccc\",900));\r\n        statisticsDataHistory.put(codeFormatDTO,statisticRecordDTOList);\r\n\r\n        plugboardPairDTOList=new ArrayList<>();\r\n        codeFormatDTO=new CodeFormatDTO(rotorInfoDTOS,\"4\",plugboardPairDTOList);\r\n        statisticRecordDTOList=new ArrayList<>();\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"aaa\",\"bbb\",500));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticsDataHistory.put(codeFormatDTO,statisticRecordDTOList);\r\n\r\n        plugboardPairDTOList.add(new PlugboardPairDTO('F','R'));\r\n        codeFormatDTO=new CodeFormatDTO(rotorInfoDTOS,\"5\",plugboardPairDTOList);\r\n        statisticRecordDTOList=new ArrayList<>();\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"aaa\",\"bbb\",500));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticsDataHistory.put(codeFormatDTO,statisticRecordDTOList);\r\n\r\n        plugboardPairDTOList=new ArrayList<>();\r\n        plugboardPairDTOList.add(new PlugboardPairDTO('A','B'));\r\n        plugboardPairDTOList.add(new PlugboardPairDTO('C','D'));\r\n        plugboardPairDTOList.add(new PlugboardPairDTO('E','F'));\r\n        codeFormatDTO=new CodeFormatDTO(rotorInfoDTOS,\"6\",plugboardPairDTOList);\r\n        statisticRecordDTOList=new ArrayList<>();\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"aaa\",\"bbb\",500));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"rrr\",\"aaa\",600));\r\n        statisticsDataHistory.put(codeFormatDTO,statisticRecordDTOList);\r\n\r\n        new Thread(\r\n                ()-> {\r\n//                    for (int i = 0; i <5 ; i++) {\r\n//                        for (int j = 0; j < i+1; j++) {\r\n//                            statisticsDataHistory.put(codeFormatDTO,statisticRecordDTOList);\r\n//                        }\r\n//                        controller.updateCodeStatisticsView(statisticsDataHistory);\r\n//                        try {\r\n//                            Thread.sleep(3000);\r\n//                        } catch (InterruptedException e) {\r\n//                            throw new RuntimeException(e);\r\n//                        }\r\n//                        statisticsDataHistory.clear();\r\n                    System.out.println(\"Im Thread::\"+Thread.currentThread().getName());\r\n//                     controller.updateCodeStatisticsView(statisticsDataHistory);\r\n                }\r\n        ).start();\r\n\r\n        controller.updateCodeStatisticsView(statisticsDataHistory);\r\n\r\n\r\n        Scene scene = new Scene(load,400,600);\r\n        controller.bindSizePropertyToParent(scene.widthProperty(),scene.heightProperty());\r\n        primaryStage.setScene(scene);\r\n        primaryStage.show();\r\n\r\n\r\n\r\n\r\n    }\r\n    private void start4(Stage primaryStage) throws IOException {\r\n\r\n\r\n        primaryStage.setTitle(\"Hello There in FXML\");\r\n        FXMLLoader fxmlLoader = new FXMLLoader();\r\n\r\n        URL url = getClass().getClassLoader().getResource(\"UI/application/encryptTab/encryptComponent/encryptComponent.fxml\");\r\n        System.out.println(\"before 1\");\r\n        fxmlLoader.setLocation(url);\r\n        System.out.println(\"before 2\");\r\n        assert url != null;\r\n        System.out.println(\"before 2.5:\"+url);\r\n        Parent load = fxmlLoader.load(url.openStream());\r\n        System.out.println(\"before 3\");\r\n//        TableStatisticRecordController controller= fxmlLoader.getController();\r\n\r\n        EncryptComponentController controller= fxmlLoader.getController();\r\n        System.out.println(\"before 4\");\r\n        Map<CodeFormatDTO, List<StatisticRecordDTO>> statisticsDataHistory= new HashMap<>();\r\n        RotorInfoDTO[] rotorInfoDTOS=new RotorInfoDTO[2];\r\n        rotorInfoDTOS[0]=new RotorInfoDTO(1,5,'A');\r\n        rotorInfoDTOS[1]=new RotorInfoDTO(2,10,'N');\r\n        List<PlugboardPairDTO> plugboardPairDTOList=new ArrayList<>();\r\n        plugboardPairDTOList.add(new PlugboardPairDTO('G','Q'));\r\n        plugboardPairDTOList.add(new PlugboardPairDTO('F','E'));\r\n        CodeFormatDTO codeFormatDTO=new CodeFormatDTO(rotorInfoDTOS,\"1\",plugboardPairDTOList);\r\n\r\n        List<StatisticRecordDTO> statisticRecordDTOList=new ArrayList<>();\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"aaa\",\"bbb\",500));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticsDataHistory.put(codeFormatDTO,statisticRecordDTOList);\r\n\r\n        plugboardPairDTOList=new ArrayList<>();\r\n        plugboardPairDTOList.add(new PlugboardPairDTO('F','G'));\r\n        codeFormatDTO=new CodeFormatDTO(rotorInfoDTOS,\"2\",plugboardPairDTOList);\r\n        statisticRecordDTOList=new ArrayList<>();\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"ddd\",\"ccc\",600));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"lll\",\"qqq\",600));\r\n        statisticsDataHistory.put(codeFormatDTO,statisticRecordDTOList);\r\n\r\n        plugboardPairDTOList=new ArrayList<>();\r\n        plugboardPairDTOList.add(new PlugboardPairDTO('A','B'));\r\n        plugboardPairDTOList.add(new PlugboardPairDTO('G','E'));\r\n        codeFormatDTO=new CodeFormatDTO(rotorInfoDTOS,\"3\",plugboardPairDTOList);\r\n        statisticRecordDTOList=new ArrayList<>();\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"aaa\",\"bbb\",668));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"fff\",\"ccc\",900));\r\n        statisticsDataHistory.put(codeFormatDTO,statisticRecordDTOList);\r\n\r\n        plugboardPairDTOList=new ArrayList<>();\r\n        codeFormatDTO=new CodeFormatDTO(rotorInfoDTOS,\"4\",plugboardPairDTOList);\r\n        statisticRecordDTOList=new ArrayList<>();\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"aaa\",\"bbb\",500));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticsDataHistory.put(codeFormatDTO,statisticRecordDTOList);\r\n\r\n        plugboardPairDTOList.add(new PlugboardPairDTO('F','R'));\r\n        codeFormatDTO=new CodeFormatDTO(rotorInfoDTOS,\"5\",plugboardPairDTOList);\r\n        statisticRecordDTOList=new ArrayList<>();\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"aaa\",\"bbb\",500));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticsDataHistory.put(codeFormatDTO,statisticRecordDTOList);\r\n\r\n        plugboardPairDTOList=new ArrayList<>();\r\n        plugboardPairDTOList.add(new PlugboardPairDTO('A','B'));\r\n        plugboardPairDTOList.add(new PlugboardPairDTO('C','D'));\r\n        plugboardPairDTOList.add(new PlugboardPairDTO('E','F'));\r\n        codeFormatDTO=new CodeFormatDTO(rotorInfoDTOS,\"6\",plugboardPairDTOList);\r\n        statisticRecordDTOList=new ArrayList<>();\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"aaa\",\"bbb\",500));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"rrr\",\"aaa\",600));\r\n        statisticsDataHistory.put(codeFormatDTO,statisticRecordDTOList);\r\n\r\n        new Thread(\r\n                ()-> {\r\n//                    for (int i = 0; i <5 ; i++) {\r\n//                        for (int j = 0; j < i+1; j++) {\r\n//                            statisticsDataHistory.put(codeFormatDTO,statisticRecordDTOList);\r\n//                        }\r\n//                        controller.updateCodeStatisticsView(statisticsDataHistory);\r\n//                        try {\r\n//                            Thread.sleep(3000);\r\n//                        } catch (InterruptedException e) {\r\n//                            throw new RuntimeException(e);\r\n//                        }\r\n//                        statisticsDataHistory.clear();\r\n                    System.out.println(\"Im Thread::\"+Thread.currentThread().getName());\r\n//                     controller.updateCodeStatisticsView(statisticsDataHistory);\r\n                }\r\n        ).start();\r\n\r\n        //  controller.updateCodeStatisticsView(statisticsDataHistory);\r\n\r\n\r\n        Scene scene = new Scene(load,400,600);\r\n        //   controller.bindSizePropertyToParent(scene.widthProperty(),scene.heightProperty());\r\n        primaryStage.setScene(scene);\r\n        primaryStage.show();\r\n\r\n\r\n\r\n\r\n    }\r\n    public static void main(String[] args) {\r\n        launch(HelloFxmlMain2.class);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/UI/src/UI/TEST_GUI/HelloFxmlMain2.java b/UI/src/UI/TEST_GUI/HelloFxmlMain2.java
--- a/UI/src/UI/TEST_GUI/HelloFxmlMain2.java	(revision 166f79bcaf7777d3041c7ee0c58402a9d22e1c30)
+++ b/UI/src/UI/TEST_GUI/HelloFxmlMain2.java	(date 1662284661962)
@@ -1,7 +1,7 @@
 package UI.TEST_GUI;
 import UI.applicationGUI.generalComponents.codeFormat.SimpleCode.SimpleCodeController;
-import UI.applicationGUI.encryptTab.EncryptTabController;
-import UI.applicationGUI.encryptTab.encryptComponent.EncryptComponentController;
+import UI.application.encryptTab.EncryptTabController;
+import UI.application.encryptTab.encryptComponent.EncryptComponentController;
 import UI.applicationGUI.encryptTab.statisticsComponent.StatisticsComponentController;
 import dtoObjects.CodeFormatDTO;
 import dtoObjects.PlugboardPairDTO;
Index: UI/src/UI/application/MachineConfTab/NewCodeFormat/NewCodeFormatController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package UI.application.MachineConfTab.NewCodeFormat;\r\n\r\nimport UI.application.MachineConfTab.MachineConfigurationController;\r\nimport UI.applicationGUI.generalComponents.codeFormat.SimpleCode.SimpleCodeController;\r\nimport dtoObjects.CodeFormatDTO;\r\nimport dtoObjects.PlugboardPairDTO;\r\nimport dtoObjects.RotorInfoDTO;\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.fxml.FXML;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.control.cell.PropertyValueFactory;\r\nimport javafx.scene.layout.HBox;\r\nimport javafx.scene.layout.Pane;\r\n\r\npublic class NewCodeFormatController {\r\n\r\n    @FXML public TableColumn RotorIDColumn;\r\n    @FXML public TableColumn PositionColumn;\r\n    @FXML public Label NoPlubBoardPairsLabel;\r\n    @FXML public Pane CurrentCodePane;\r\n    @FXML public Label rotorsCurrCode;\r\n    @FXML public Label positionCurrLabel;\r\n    @FXML public HBox currCode;\r\n    @FXML  public SimpleCodeController currCodeController;\r\n    @FXML  public Pane currentCodePane;\r\n    @FXML   private MachineConfigurationController machineConfController;\r\n    @FXML\r\n    private Label SelectedReflectorLabel;\r\n\r\n    @FXML\r\n    private Label SelectedReflector;\r\n\r\n    @FXML\r\n    private Label RotorsAndPositionsLabel;\r\n\r\n    @FXML\r\n    private TableView<rotorsAndPositions> RotorsAndPositionsTable;\r\n\r\n    @FXML\r\n    private ListView<PlugboardPairDTO> PairsListView;\r\n\r\n    @FXML\r\n    private Label PlugBoardPairsLabel;\r\n\r\n    @FXML\r\n    private Label CurrentCodeLabel;\r\n\r\n    @FXML\r\n    public void initialize() {\r\n\r\n        if (currCodeController != null) {\r\n            currCodeController.setCurrCodeController(this);\r\n        }\r\n\r\n    }\r\n\r\n    public void SetMachineConfController(MachineConfigurationController machineConfigurationController) {\r\n        machineConfController=machineConfigurationController;\r\n    }\r\n\r\n    public void SetCurrentCode(CodeFormatDTO currentCode,boolean isCurrentCode) {\r\n\r\n\r\n        currCodeController.clearCurrentCodeView();\r\n        SelectedReflector.setText(currentCode.getReflectorID());\r\n        RotorInfoDTO[] SelectedRotors=currentCode.getRotorInfo();\r\n        ObservableList<rotorsAndPositions> rotorsAndPositions = FXCollections.observableArrayList();\r\n        for (RotorInfoDTO rotor:SelectedRotors) {\r\n            rotorsAndPositions.add(new rotorsAndPositions(rotor.getId(),String.valueOf(rotor.getStatingLetter())));\r\n        }\r\n\r\n        RotorIDColumn.setCellValueFactory(new PropertyValueFactory<rotorsAndPositions,Integer>(\"rotorID\"));\r\n        PositionColumn.setCellValueFactory(new PropertyValueFactory<rotorsAndPositions,String>(\"rotorCurrPosition\"));\r\n        RotorsAndPositionsTable.setItems(rotorsAndPositions);\r\n\r\n        ObservableList<PlugboardPairDTO> plugBoardPairs = FXCollections.observableArrayList();\r\n        if(currentCode.getPlugboardPairDTOList().size()!=0) {\r\n            for (int i = 0; i < currentCode.getPlugboardPairDTOList().size(); i++) {\r\n                plugBoardPairs.add(currentCode.getPlugboardPairDTOList().get(i));\r\n            }\r\n\r\n            PairsListView.setItems(plugBoardPairs);\r\n            PairsListView.setVisible(true);\r\n            NoPlubBoardPairsLabel.setVisible(false);\r\n            //CurrentCodePane.setLayoutX(PlugBoardPairsLabel.getLayoutX());\r\n            //CurrentCodePane.setLayoutY(PlugBoardPairsLabel.getLayoutY()+100);\r\n\r\n        }\r\n        else{\r\n            NoPlubBoardPairsLabel.setVisible(true);\r\n            PairsListView.setVisible(false);\r\n            //CurrentCodePane.setLayoutX(PlugBoardPairsLabel.getLayoutX());\r\n           // CurrentCodePane.setLayoutY(PlugBoardPairsLabel.getLayoutY()+30);\r\n        }\r\n\r\n\r\n        currCodeController.setSelectedCode(currentCode);\r\n\r\n        if(isCurrentCode)\r\n            CurrentCodeLabel.setText(\"Current Code\");\r\n        else\r\n            CurrentCodeLabel.setText(\"Selected Code\");\r\n    }\r\n\r\n    public void resetFields()\r\n    {\r\n        SelectedReflector.setText(\"\");\r\n        RotorsAndPositionsTable.getItems().clear();\r\n        PairsListView.getItems().clear();\r\n        currCodeController.clearCurrentCodeView();\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/UI/src/UI/application/MachineConfTab/NewCodeFormat/NewCodeFormatController.java b/UI/src/UI/application/MachineConfTab/NewCodeFormat/NewCodeFormatController.java
--- a/UI/src/UI/application/MachineConfTab/NewCodeFormat/NewCodeFormatController.java	(revision 166f79bcaf7777d3041c7ee0c58402a9d22e1c30)
+++ b/UI/src/UI/application/MachineConfTab/NewCodeFormat/NewCodeFormatController.java	(date 1662284661994)
@@ -1,7 +1,6 @@
 package UI.application.MachineConfTab.NewCodeFormat;
 
 import UI.application.MachineConfTab.MachineConfigurationController;
-import UI.applicationGUI.generalComponents.codeFormat.SimpleCode.SimpleCodeController;
 import dtoObjects.CodeFormatDTO;
 import dtoObjects.PlugboardPairDTO;
 import dtoObjects.RotorInfoDTO;
@@ -12,6 +11,7 @@
 import javafx.scene.control.cell.PropertyValueFactory;
 import javafx.scene.layout.HBox;
 import javafx.scene.layout.Pane;
+import UI.applicationGUI.generalComponents.codeFormat.SimpleCode.SimpleCodeController;
 
 public class NewCodeFormatController {
 
Index: UI/src/UI/TEST_GUI/HelloFxmlMain.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package UI.TEST_GUI;\r\n\r\nimport UI.applicationGUI.generalComponents.codeFormat.SimpleCode.SimpleCodeController;\r\nimport UI.applicationGUI.encryptTab.EncryptTabController;\r\nimport UI.applicationGUI.encryptTab.encryptComponent.EncryptComponentController;\r\nimport UI.applicationGUI.encryptTab.statisticsComponent.StatisticsComponentController;\r\nimport dtoObjects.CodeFormatDTO;\r\nimport dtoObjects.PlugboardPairDTO;\r\nimport dtoObjects.RotorInfoDTO;\r\nimport dtoObjects.StatisticRecordDTO;\r\nimport javafx.application.Application;\r\nimport javafx.application.Platform;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.io.IOException;\r\nimport java.net.URL;\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Map;\r\n\r\nimport static UI.applicationGUI.CommonResourcesPaths.*;\r\n\r\n\r\n//video: 100189 - FXML Hello World [JAD, JavaFX] | Powered by SpeaCode\r\npublic class HelloFxmlMain extends Application{\r\n\r\n    @Override\r\n    public void start(Stage primaryStage) throws Exception {\r\n\r\n         start1(primaryStage);\r\n//         start2(primaryStage);\r\n//        start3(primaryStage);\r\n//        start3(primaryStage);\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n     private void start1(Stage primaryStage) throws IOException {\r\n\r\n          FXMLLoader fxmlLoader = new FXMLLoader();\r\n\r\n          URL url = getClass().getClassLoader().getResource(\"UI/application/encryptTab/encryptTab.fxml\");\r\n          System.out.println(\"before 1\");\r\n          fxmlLoader.setLocation(url);\r\n          System.out.println(\"before 2\");\r\n          assert url != null;\r\n          System.out.println(\"before 2.5:\"+url);\r\n          Parent load = fxmlLoader.load(url.openStream());\r\n          System.out.println(\"before 3\");\r\n//        TableStatisticRecordController controller= fxmlLoader.getController();\r\n          EncryptTabController controller= fxmlLoader.getController();\r\n          System.out.println(\"before 4\");\r\n          List<StatisticRecordDTO> statisticRecordDTOList=new ArrayList<>();\r\n          statisticRecordDTOList.add(new StatisticRecordDTO(\"aaa\",\"bbb\",500));\r\n          statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n          statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n          statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n          System.out.println(\"before 7\");\r\n//        controller.addRecordsToStatisticTable(statisticRecordDTOList);\r\n          Map<CodeFormatDTO, List<StatisticRecordDTO>> statisticsDataHistory= new HashMap<>();\r\n          RotorInfoDTO[] rotorInfoDTOS=new RotorInfoDTO[2];\r\n          List<PlugboardPairDTO> plugboardPairDTOList=new ArrayList<>();\r\n          CodeFormatDTO codeFormatDTO=new CodeFormatDTO(rotorInfoDTOS,\"I\",plugboardPairDTOList);\r\n          statisticsDataHistory.put(codeFormatDTO,statisticRecordDTOList);\r\n          rotorInfoDTOS[0]=new RotorInfoDTO(1,5,'A');\r\n          rotorInfoDTOS[1]=new RotorInfoDTO(2,10,'N');\r\n          codeFormatDTO=new CodeFormatDTO(rotorInfoDTOS,\"II\",plugboardPairDTOList);\r\n          plugboardPairDTOList=new ArrayList<>();\r\n          plugboardPairDTOList.add(new PlugboardPairDTO('A','B'));\r\n          plugboardPairDTOList.add(new PlugboardPairDTO('G','E'));\r\n          statisticsDataHistory.put(codeFormatDTO,statisticRecordDTOList);\r\n          statisticRecordDTOList=new ArrayList<>();\r\n          statisticRecordDTOList.add(new StatisticRecordDTO(\"aaa\",\"bbb\",500));\r\n          statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n          statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n          statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n          codeFormatDTO=new CodeFormatDTO(rotorInfoDTOS,\"IV\",plugboardPairDTOList);\r\n\r\n          statisticsDataHistory.put(codeFormatDTO,statisticRecordDTOList);\r\n          statisticRecordDTOList=new ArrayList<>();\r\n          statisticRecordDTOList.add(new StatisticRecordDTO(\"aaa\",\"bbb\",500));\r\n          statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n          statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n          statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n          codeFormatDTO=new CodeFormatDTO(rotorInfoDTOS,\"V\",plugboardPairDTOList);\r\n          statisticRecordDTOList=new ArrayList<>();\r\n          statisticRecordDTOList.add(new StatisticRecordDTO(\"aaa\",\"bbb\",500));\r\n          statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n          statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n          statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n          statisticsDataHistory.put(codeFormatDTO,statisticRecordDTOList);\r\n          statisticRecordDTOList.add(new StatisticRecordDTO(\"rrr\",\"aaa\",600));\r\n          statisticsDataHistory.put(codeFormatDTO,statisticRecordDTOList);\r\n\r\n\r\n          //controller.updateCodeStatisticsView(statisticsDataHistory);\r\n\r\n          System.out.println(\"before 8\");\r\n          Scene scene = new Scene(load,800,600);\r\n          System.out.println(\"before 9\");\r\n         primaryStage.setScene(scene);\r\n         controller.bindComponentsWidthToScene(scene.widthProperty(),scene.heightProperty());\r\n          primaryStage.show();\r\n\r\n     }\r\n     private void start3(Stage primaryStage) throws IOException, InterruptedException {\r\n\r\n          FXMLLoader fxmlLoader = new FXMLLoader();\r\n\r\n          URL url = getClass().getClassLoader().getResource(SIMPLE_CODE_FORMAT);\r\n          fxmlLoader.setLocation(url);\r\n          assert url != null;\r\n          Parent load = fxmlLoader.load(url.openStream());\r\n\r\n          Scene scene = new Scene(load);\r\n          primaryStage.setScene(scene);\r\n          primaryStage.show();\r\n//        TableStatisticRecordController controller= fxmlLoader.getController();\r\n          SimpleCodeController controller= fxmlLoader.getController();\r\n\r\n          RotorInfoDTO[] rotorInfoDTOS=new RotorInfoDTO[2];\r\n          List<PlugboardPairDTO> plugboardPairDTOList=new ArrayList<>();\r\n          rotorInfoDTOS[0]=new RotorInfoDTO(1,5,'A');\r\n          rotorInfoDTOS[1]=new RotorInfoDTO(2,10,'N');\r\n          CodeFormatDTO codeFormatDTO=new CodeFormatDTO(rotorInfoDTOS,\"I\",plugboardPairDTOList);\r\n         CodeFormatDTO finalCodeFormatDTO = codeFormatDTO;\r\n         Platform.runLater(()->{\r\n             controller.clearCurrentCodeView();\r\n             controller.setSelectedCode(finalCodeFormatDTO);\r\n         });\r\n\r\n         Thread.sleep(2000);\r\n          plugboardPairDTOList=new ArrayList<>();\r\n          plugboardPairDTOList.add(new PlugboardPairDTO('A','B'));\r\n          plugboardPairDTOList.add(new PlugboardPairDTO('G','E'));\r\n         CodeFormatDTO finalCodeFormatDTO2 = codeFormatDTO;\r\n         Platform.runLater(()->{\r\n             controller.clearCurrentCodeView();\r\n             controller.setSelectedCode(finalCodeFormatDTO2);\r\n         });\r\n\r\n         Thread.sleep(2000);\r\n          codeFormatDTO=new CodeFormatDTO(rotorInfoDTOS,\"IV\",plugboardPairDTOList);\r\n         CodeFormatDTO finalCodeFormatDTO3 = codeFormatDTO;\r\n         Platform.runLater(()->{\r\n             controller.clearCurrentCodeView();\r\n             controller.setSelectedCode(finalCodeFormatDTO3);\r\n         });\r\n         Thread.sleep(2000);\r\n         plugboardPairDTOList=new ArrayList<>();\r\n         codeFormatDTO=new CodeFormatDTO(rotorInfoDTOS,\"V\",plugboardPairDTOList);\r\n         Thread.sleep(2000);\r\n\r\n     }\r\n     private void start2(Stage primaryStage) throws IOException {\r\n\r\n\r\n          primaryStage.setTitle(\"Hello There in FXML\");\r\n        FXMLLoader fxmlLoader = new FXMLLoader();\r\n\r\n        URL url = getClass().getClassLoader().getResource(\"UI/application/encryptTab/statisticsComponent/statisticsCodeComponent.fxml\");\r\n        System.out.println(\"before 1\");\r\n        fxmlLoader.setLocation(url);\r\n        System.out.println(\"before 2\");\r\n        assert url != null;\r\n        System.out.println(\"before 2.5:\"+url);\r\n        Parent load = fxmlLoader.load(url.openStream());\r\n        System.out.println(\"before 3\");\r\n//        TableStatisticRecordController controller= fxmlLoader.getController();\r\n\r\n        StatisticsComponentController controller= fxmlLoader.getController();\r\n        System.out.println(\"before 4\");\r\n        Map<CodeFormatDTO, List<StatisticRecordDTO>> statisticsDataHistory= new HashMap<>();\r\n        RotorInfoDTO[] rotorInfoDTOS=new RotorInfoDTO[2];\r\n        rotorInfoDTOS[0]=new RotorInfoDTO(1,5,'A');\r\n        rotorInfoDTOS[1]=new RotorInfoDTO(2,10,'N');\r\n        List<PlugboardPairDTO> plugboardPairDTOList=new ArrayList<>();\r\n        plugboardPairDTOList.add(new PlugboardPairDTO('G','Q'));\r\n        plugboardPairDTOList.add(new PlugboardPairDTO('F','E'));\r\n        CodeFormatDTO codeFormatDTO=new CodeFormatDTO(rotorInfoDTOS,\"1\",plugboardPairDTOList);\r\n\r\n        List<StatisticRecordDTO> statisticRecordDTOList=new ArrayList<>();\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"aaa\",\"bbb\",500));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticsDataHistory.put(codeFormatDTO,statisticRecordDTOList);\r\n\r\n        plugboardPairDTOList=new ArrayList<>();\r\n        plugboardPairDTOList.add(new PlugboardPairDTO('F','G'));\r\n        codeFormatDTO=new CodeFormatDTO(rotorInfoDTOS,\"2\",plugboardPairDTOList);\r\n        statisticRecordDTOList=new ArrayList<>();\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"ddd\",\"ccc\",600));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"lll\",\"qqq\",600));\r\n      statisticsDataHistory.put(codeFormatDTO,statisticRecordDTOList);\r\n\r\n        plugboardPairDTOList=new ArrayList<>();\r\n        plugboardPairDTOList.add(new PlugboardPairDTO('A','B'));\r\n        plugboardPairDTOList.add(new PlugboardPairDTO('G','E'));\r\n        codeFormatDTO=new CodeFormatDTO(rotorInfoDTOS,\"3\",plugboardPairDTOList);\r\n        statisticRecordDTOList=new ArrayList<>();\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"aaa\",\"bbb\",668));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"fff\",\"ccc\",900));\r\n        statisticsDataHistory.put(codeFormatDTO,statisticRecordDTOList);\r\n\r\n        plugboardPairDTOList=new ArrayList<>();\r\n        codeFormatDTO=new CodeFormatDTO(rotorInfoDTOS,\"4\",plugboardPairDTOList);\r\n        statisticRecordDTOList=new ArrayList<>();\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"aaa\",\"bbb\",500));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticsDataHistory.put(codeFormatDTO,statisticRecordDTOList);\r\n\r\n        plugboardPairDTOList.add(new PlugboardPairDTO('F','R'));\r\n        codeFormatDTO=new CodeFormatDTO(rotorInfoDTOS,\"5\",plugboardPairDTOList);\r\n        statisticRecordDTOList=new ArrayList<>();\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"aaa\",\"bbb\",500));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticsDataHistory.put(codeFormatDTO,statisticRecordDTOList);\r\n\r\n        plugboardPairDTOList=new ArrayList<>();\r\n        plugboardPairDTOList.add(new PlugboardPairDTO('A','B'));\r\n        plugboardPairDTOList.add(new PlugboardPairDTO('C','D'));\r\n        plugboardPairDTOList.add(new PlugboardPairDTO('E','F'));\r\n        codeFormatDTO=new CodeFormatDTO(rotorInfoDTOS,\"6\",plugboardPairDTOList);\r\n        statisticRecordDTOList=new ArrayList<>();\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"aaa\",\"bbb\",500));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"rrr\",\"aaa\",600));\r\n        statisticsDataHistory.put(codeFormatDTO,statisticRecordDTOList);\r\n\r\n        new Thread(\r\n                ()-> {\r\n//                    for (int i = 0; i <5 ; i++) {\r\n//                        for (int j = 0; j < i+1; j++) {\r\n//                            statisticsDataHistory.put(codeFormatDTO,statisticRecordDTOList);\r\n//                        }\r\n//                        controller.updateCodeStatisticsView(statisticsDataHistory);\r\n//                        try {\r\n//                            Thread.sleep(3000);\r\n//                        } catch (InterruptedException e) {\r\n//                            throw new RuntimeException(e);\r\n//                        }\r\n//                        statisticsDataHistory.clear();\r\n                     System.out.println(\"Im Thread::\"+Thread.currentThread().getName());\r\n//                     controller.updateCodeStatisticsView(statisticsDataHistory);\r\n                    }\r\n            ).start();\r\n\r\n        controller.updateCodeStatisticsView(statisticsDataHistory);\r\n\r\n\r\n        Scene scene = new Scene(load,400,600);\r\n         controller.bindSizePropertyToParent(scene.widthProperty(),scene.heightProperty());\r\n        primaryStage.setScene(scene);\r\n        primaryStage.show();\r\n\r\n\r\n\r\n\r\n     }\r\n     private void start4(Stage primaryStage) throws IOException {\r\n\r\n\r\n          primaryStage.setTitle(\"Hello There in FXML\");\r\n        FXMLLoader fxmlLoader = new FXMLLoader();\r\n\r\n        URL url = getClass().getClassLoader().getResource(\"UI/application/encryptTab/encryptComponent/encryptComponent.fxml\");\r\n        System.out.println(\"before 1\");\r\n        fxmlLoader.setLocation(url);\r\n        System.out.println(\"before 2\");\r\n        assert url != null;\r\n        System.out.println(\"before 2.5:\"+url);\r\n        Parent load = fxmlLoader.load(url.openStream());\r\n        System.out.println(\"before 3\");\r\n//        TableStatisticRecordController controller= fxmlLoader.getController();\r\n\r\n        EncryptComponentController controller= fxmlLoader.getController();\r\n        System.out.println(\"before 4\");\r\n        Map<CodeFormatDTO, List<StatisticRecordDTO>> statisticsDataHistory= new HashMap<>();\r\n        RotorInfoDTO[] rotorInfoDTOS=new RotorInfoDTO[2];\r\n        rotorInfoDTOS[0]=new RotorInfoDTO(1,5,'A');\r\n        rotorInfoDTOS[1]=new RotorInfoDTO(2,10,'N');\r\n        List<PlugboardPairDTO> plugboardPairDTOList=new ArrayList<>();\r\n        plugboardPairDTOList.add(new PlugboardPairDTO('G','Q'));\r\n        plugboardPairDTOList.add(new PlugboardPairDTO('F','E'));\r\n        CodeFormatDTO codeFormatDTO=new CodeFormatDTO(rotorInfoDTOS,\"1\",plugboardPairDTOList);\r\n\r\n        List<StatisticRecordDTO> statisticRecordDTOList=new ArrayList<>();\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"aaa\",\"bbb\",500));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticsDataHistory.put(codeFormatDTO,statisticRecordDTOList);\r\n\r\n        plugboardPairDTOList=new ArrayList<>();\r\n        plugboardPairDTOList.add(new PlugboardPairDTO('F','G'));\r\n        codeFormatDTO=new CodeFormatDTO(rotorInfoDTOS,\"2\",plugboardPairDTOList);\r\n        statisticRecordDTOList=new ArrayList<>();\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"ddd\",\"ccc\",600));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"lll\",\"qqq\",600));\r\n      statisticsDataHistory.put(codeFormatDTO,statisticRecordDTOList);\r\n\r\n        plugboardPairDTOList=new ArrayList<>();\r\n        plugboardPairDTOList.add(new PlugboardPairDTO('A','B'));\r\n        plugboardPairDTOList.add(new PlugboardPairDTO('G','E'));\r\n        codeFormatDTO=new CodeFormatDTO(rotorInfoDTOS,\"3\",plugboardPairDTOList);\r\n        statisticRecordDTOList=new ArrayList<>();\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"aaa\",\"bbb\",668));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"fff\",\"ccc\",900));\r\n        statisticsDataHistory.put(codeFormatDTO,statisticRecordDTOList);\r\n\r\n        plugboardPairDTOList=new ArrayList<>();\r\n        codeFormatDTO=new CodeFormatDTO(rotorInfoDTOS,\"4\",plugboardPairDTOList);\r\n        statisticRecordDTOList=new ArrayList<>();\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"aaa\",\"bbb\",500));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticsDataHistory.put(codeFormatDTO,statisticRecordDTOList);\r\n\r\n        plugboardPairDTOList.add(new PlugboardPairDTO('F','R'));\r\n        codeFormatDTO=new CodeFormatDTO(rotorInfoDTOS,\"5\",plugboardPairDTOList);\r\n        statisticRecordDTOList=new ArrayList<>();\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"aaa\",\"bbb\",500));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticsDataHistory.put(codeFormatDTO,statisticRecordDTOList);\r\n\r\n        plugboardPairDTOList=new ArrayList<>();\r\n        plugboardPairDTOList.add(new PlugboardPairDTO('A','B'));\r\n        plugboardPairDTOList.add(new PlugboardPairDTO('C','D'));\r\n        plugboardPairDTOList.add(new PlugboardPairDTO('E','F'));\r\n        codeFormatDTO=new CodeFormatDTO(rotorInfoDTOS,\"6\",plugboardPairDTOList);\r\n        statisticRecordDTOList=new ArrayList<>();\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"aaa\",\"bbb\",500));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"bbb\",\"ccc\",600));\r\n        statisticRecordDTOList.add(new StatisticRecordDTO(\"rrr\",\"aaa\",600));\r\n        statisticsDataHistory.put(codeFormatDTO,statisticRecordDTOList);\r\n\r\n        new Thread(\r\n                ()-> {\r\n//                    for (int i = 0; i <5 ; i++) {\r\n//                        for (int j = 0; j < i+1; j++) {\r\n//                            statisticsDataHistory.put(codeFormatDTO,statisticRecordDTOList);\r\n//                        }\r\n//                        controller.updateCodeStatisticsView(statisticsDataHistory);\r\n//                        try {\r\n//                            Thread.sleep(3000);\r\n//                        } catch (InterruptedException e) {\r\n//                            throw new RuntimeException(e);\r\n//                        }\r\n//                        statisticsDataHistory.clear();\r\n                     System.out.println(\"Im Thread::\"+Thread.currentThread().getName());\r\n//                     controller.updateCodeStatisticsView(statisticsDataHistory);\r\n                    }\r\n            ).start();\r\n\r\n      //  controller.updateCodeStatisticsView(statisticsDataHistory);\r\n\r\n\r\n        Scene scene = new Scene(load,400,600);\r\n      //   controller.bindSizePropertyToParent(scene.widthProperty(),scene.heightProperty());\r\n        primaryStage.setScene(scene);\r\n        primaryStage.show();\r\n\r\n\r\n\r\n\r\n     }\r\n    public static void main(String[] args) {\r\n        launch(HelloFxmlMain.class);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/UI/src/UI/TEST_GUI/HelloFxmlMain.java b/UI/src/UI/TEST_GUI/HelloFxmlMain.java
--- a/UI/src/UI/TEST_GUI/HelloFxmlMain.java	(revision 166f79bcaf7777d3041c7ee0c58402a9d22e1c30)
+++ b/UI/src/UI/TEST_GUI/HelloFxmlMain.java	(date 1662284662011)
@@ -1,8 +1,8 @@
 package UI.TEST_GUI;
 
 import UI.applicationGUI.generalComponents.codeFormat.SimpleCode.SimpleCodeController;
-import UI.applicationGUI.encryptTab.EncryptTabController;
-import UI.applicationGUI.encryptTab.encryptComponent.EncryptComponentController;
+import UI.application.encryptTab.EncryptTabController;
+import UI.application.encryptTab.encryptComponent.EncryptComponentController;
 import UI.applicationGUI.encryptTab.statisticsComponent.StatisticsComponentController;
 import dtoObjects.CodeFormatDTO;
 import dtoObjects.PlugboardPairDTO;
Index: UI/src/UI/application/encryptTab/encryptComponent/EncryptComponentController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package UI.applicationGUI.encryptTab.encryptComponent;\r\n\r\nimport UI.applicationGUI.encryptTab.EncryptTabController;\r\nimport UI.applicationGUI.encryptTab.encryptComponent.automaticEncrypt.AutomaticEncryptController;\r\nimport UI.applicationGUI.encryptTab.encryptComponent.manualEncrypt.ManualEncryptController;\r\nimport enigmaEngine.Encryptor;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.control.RadioButton;\r\nimport javafx.scene.control.ToggleGroup;\r\nimport javafx.scene.layout.Pane;\r\n\r\npublic class EncryptComponentController {\r\n    @FXML\r\n    private AutomaticEncryptController automaticComponentController;\r\n    @FXML\r\n    private Pane automaticLayout;\r\n    @FXML\r\n    private ManualEncryptController manualComponentController;\r\n    @FXML\r\n    private Pane manualLayout;\r\n    @FXML\r\n    private RadioButton automaticToggle;\r\n    @FXML\r\n    private RadioButton manualToggle;\r\n    @FXML\r\n    private Label outputString;\r\n    private Encryptor encryptor;\r\n    private ToggleGroup toggleGroupSelector;\r\n    private EncryptTabController parentComponentTab;\r\n\r\n    public void resetCodeToInitialState(ActionEvent actionEvent) {\r\n        encryptor.resetCodePosition();\r\n        automaticComponentController.clearTextFieldInput(actionEvent);\r\n    }\r\n\r\n    public void setParentComponentTab(EncryptTabController parentComponentTab) {\r\n        this.parentComponentTab = parentComponentTab;\r\n    }\r\n\r\n    public void setEncryptor(Encryptor encryptor) {\r\n        this.encryptor = encryptor;\r\n        automaticComponentController.setEncryptor(encryptor);\r\n        manualComponentController.setEncryptor(encryptor);\r\n\r\n    }\r\n    public void doneProcessData()\r\n    {\r\n        parentComponentTab.doneProcessData();\r\n    }\r\n    @FXML\r\n    private void initialize() {\r\n        //link toggle to group\r\n        toggleGroupSelector=new ToggleGroup();\r\n        manualToggle.setToggleGroup(toggleGroupSelector);\r\n        automaticToggle.setToggleGroup(toggleGroupSelector);\r\n        automaticToggle.setSelected(true);\r\n        //link toggle to layout component\r\n        automaticLayout.disableProperty().bind(automaticToggle.selectedProperty().not());\r\n        automaticLayout.visibleProperty().bind(automaticToggle.selectedProperty());\r\n        manualLayout.disableProperty().bind(manualToggle.selectedProperty().not());\r\n        manualLayout.visibleProperty().bind(manualToggle.selectedProperty());\r\n        //link output label to model in controllers\r\n        automaticComponentController.bindOutputPropertyFromParent(outputString.textProperty());\r\n        manualComponentController.bindOutputPropertyFromParent(outputString.textProperty());\r\n\r\n        //link child controller to parent\r\n        automaticComponentController.setEncryptComponentController(this);\r\n        manualComponentController.setEncryptComponentController(this);\r\n\r\n\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/UI/src/UI/application/encryptTab/encryptComponent/EncryptComponentController.java b/UI/src/UI/application/encryptTab/encryptComponent/EncryptComponentController.java
--- a/UI/src/UI/application/encryptTab/encryptComponent/EncryptComponentController.java	(revision 166f79bcaf7777d3041c7ee0c58402a9d22e1c30)
+++ b/UI/src/UI/application/encryptTab/encryptComponent/EncryptComponentController.java	(date 1662284662034)
@@ -1,8 +1,9 @@
-package UI.applicationGUI.encryptTab.encryptComponent;
+package UI.application.encryptTab.encryptComponent;
 
-import UI.applicationGUI.encryptTab.EncryptTabController;
-import UI.applicationGUI.encryptTab.encryptComponent.automaticEncrypt.AutomaticEncryptController;
-import UI.applicationGUI.encryptTab.encryptComponent.manualEncrypt.ManualEncryptController;
+import UI.application.encryptTab.EncryptTabController;
+import UI.application.encryptTab.encryptComponent.automaticEncrypt.AutomaticEncryptController;
+import UI.application.encryptTab.encryptComponent.manualEncrypt.ManualEncryptController;
+import UI.application.encryptTab.encryptComponent.automaticEncrypt.AutomaticEncryptController;
 import enigmaEngine.Encryptor;
 import javafx.event.ActionEvent;
 import javafx.fxml.FXML;
Index: Engine/src/Resources/errorFile.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Engine/src/Resources/errorFile.xml b/Engine/src/Resources/errorFile.xml
new file mode 100644
--- /dev/null	(date 1662284662052)
+++ b/Engine/src/Resources/errorFile.xml	(date 1662284662052)
@@ -0,0 +1,46 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<CTE-Enigma xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="Enigma-Ex1.xsd">
+	<CTE-Machine rotors-count="2">
+		<ABC>
+			ABCDEF
+		</ABC>
+		<CTE-Rotors>
+			<CTE-Rotor id="1" notch="4">
+				<CTE-Positioning right="A" left="F"/>
+				<CTE-Positioning right="B" left="E"/>
+				<CTE-Positioning right="C" left="D"/>
+				<CTE-Positioning right="D" left="C"/>
+				<CTE-Positioning right="E" left="B"/>				
+				<CTE-Positioning right="F" left="A"/>		
+			</CTE-Rotor>
+			<CTE-Rotor id="3" notch="6">
+				<CTE-Positioning right="A" left="B"/>
+				<CTE-Positioning right="B" left="A"/>
+				<CTE-Positioning right="C" left="D"/>
+				<CTE-Positioning right="D" left="C"/>
+				<CTE-Positioning right="E" left="F"/>				
+				<CTE-Positioning right="F" left="E"/>				
+			</CTE-Rotor>						
+			<CTE-Rotor id="2" notch="8">
+				<CTE-Positioning right="A" left="E"/>
+				<CTE-Positioning right="B" left="B"/>
+				<CTE-Positioning right="C" left="D"/>
+				<CTE-Positioning right="D" left="F"/>
+				<CTE-Positioning right="E" left="C"/>				
+				<CTE-Positioning right="F" left="A"/>					
+			</CTE-Rotor>						
+		</CTE-Rotors>
+		<CTE-Reflectors>
+			<CTE-Reflector id="I">
+				<CTE-Reflect input="1" output="4"/>
+				<CTE-Reflect input="2" output="5"/>
+				<CTE-Reflect input="3" output="6"/>							
+			</CTE-Reflector>
+			<CTE-Reflector id="II">
+				<CTE-Reflect input="1" output="2"/>
+				<CTE-Reflect input="3" output="4"/>
+				<CTE-Reflect input="5" output="6"/>
+			</CTE-Reflector>			
+		</CTE-Reflectors>
+	</CTE-Machine>	
+</CTE-Enigma>
